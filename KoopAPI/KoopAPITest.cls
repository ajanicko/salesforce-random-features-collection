@isTest
public class KoopAPITest {
	@isTest static void coverGeneratedCodeTypes() {
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI parentObject = new KoopAPI();
		new KoopAPI.ArrayOfArrayOfString();
		new KoopAPI.ArrayOfCekarnaStorenItem();
		new KoopAPI.ArrayOfCiselnikFrekvencePlaceniItem();
		new KoopAPI.ArrayOfCiselnikProduktItem();
		new KoopAPI.ArrayOfCiselnikRizikoItem();
		new KoopAPI.ArrayOfCiselnikRoleNaSmlouveItem();
		new KoopAPI.ArrayOfCiselnikStavSmlouvyItem();
		new KoopAPI.ArrayOfCiselnikStornoItem();
		new KoopAPI.ArrayOfCiselnikZpusobPlatbyItem();
		new KoopAPI.ArrayOfDluznikFlotilaItem();
		new KoopAPI.ArrayOfDluznikIndividualniItem();
		new KoopAPI.ArrayOfDluznikItem();
		new KoopAPI.ArrayOfDokumentItem();
		new KoopAPI.ArrayOfInvesticeItem();
		new KoopAPI.ArrayOfKmenDetailItem();
		new KoopAPI.ArrayOfKmenItem();
		new KoopAPI.ArrayOfMistoPojisteniItem();
		new KoopAPI.ArrayOfNIItem();
		new KoopAPI.ArrayOfNovaSmlouvaRozsirenaItem();
		new KoopAPI.ArrayOfNovaSmlouvaVDPItem();
		new KoopAPI.ArrayOfNovinkaItem();
		new KoopAPI.ArrayOfOsobaItem();
		new KoopAPI.ArrayOfPNDNestalecItem();
		new KoopAPI.ArrayOfPojistneUdalostiItem();
		new KoopAPI.ArrayOfProvizeItem();
		new KoopAPI.ArrayOfRizikoItem();
		new KoopAPI.ArrayOfRoleOsobaItem();
		new KoopAPI.ArrayOfSmlouvaPNDAkceptaceItem();
		new KoopAPI.ArrayOfSmlouvaPNDCekarnaItem();
		new KoopAPI.ArrayOfSouborItem();
		new KoopAPI.ArrayOfStatusDetail();
		new KoopAPI.ArrayOfStavSmlouvyItem();
		new KoopAPI.ArrayOfString();
		new KoopAPI.ArrayOfUkonceneSmlouvyItem();
		new KoopAPI.ArrayOfUzivatelKnzItem();
		new KoopAPI.ArrayOfVozidloItem();
		new KoopAPI.ArrayOfZiskatel();
		new KoopAPI.BaseExtra();
		new KoopAPI.CekarnaStoren_element();
		new KoopAPI.CekarnaStorenData();
		new KoopAPI.CekarnaStorenTable_element();
		new KoopAPI.CekarnaStorenItem();
		new KoopAPI.CekarnaStorenResponse_element();
		new KoopAPI.CiselnikFrekvencePlaceniItem();
		new KoopAPI.CiselnikProduktItem();
		new KoopAPI.CiselnikRizikoItem();
		new KoopAPI.CiselnikRoleNaSmlouveItem();
		new KoopAPI.CiselnikStavSmlouvyItem();
		new KoopAPI.CiselnikStornoItem();
		new KoopAPI.Ciselniky_element();
		new KoopAPI.CiselnikyData();
		new KoopAPI.CiselnikyResponse_element();
		new KoopAPI.CiselnikZpusobPlatbyItem();
		new KoopAPI.Dluznik_element();
		new KoopAPI.DluznikData();
		new KoopAPI.DluznikTable_element();
		new KoopAPI.DluznikFlotila_element();
		new KoopAPI.DluznikFlotilaData();
		new KoopAPI.DluznikTable_element();
		new KoopAPI.DluznikFlotilaItem();
		new KoopAPI.DluznikFlotilaResponse_element();
		new KoopAPI.DluznikIndividualni_element();
		new KoopAPI.DluznikIndividualniData();
		new KoopAPI.DluznikTable_element();
		new KoopAPI.DluznikIndividualniItem();
		new KoopAPI.DluznikIndividualniResponse_element();
		new KoopAPI.DluznikItem();
		new KoopAPI.DluznikResponse_element();
		new KoopAPI.DocumentsData();
		new KoopAPI.DokumentItem();
		new KoopAPI.DokumentySmlouvy_element();
		new KoopAPI.DokumentySmlouvyResponse_element();
		new KoopAPI.ExtraDataInfo();
		new KoopAPI.InvesticeData();
		new KoopAPI.InvesticeTable_element();
		new KoopAPI.InvesticeItem();
		new KoopAPI.InvesticeTip_element();
		new KoopAPI.InvesticeTipResponse_element();
		new KoopAPI.Kmen_element();
		new KoopAPI.KmenData();
		new KoopAPI.KmenTable_element();
		new KoopAPI.KmenDetail_element();
		new KoopAPI.KmenDetailData();
		new KoopAPI.KmenDetailItem();
		new KoopAPI.KmenDetailResponse_element();
		new KoopAPI.KmenItem();
		new KoopAPI.KmenResponse_element();
		new KoopAPI.LogFile();
		new KoopAPI.MistoPojisteniItem();
		new KoopAPI.NeinkasniIntervence_element();
		new KoopAPI.NeinkasniIntervenceData();
		new KoopAPI.NeinkasniIntervenceResponse_element();
		new KoopAPI.NIItem();
		new KoopAPI.NovaSmlouvaDataRozsirena();
		new KoopAPI.NovaSmlouvaTable_element();
		new KoopAPI.NovaSmlouvaDataVDP();
		new KoopAPI.NovaSmlouvaTable_element();
		new KoopAPI.NovaSmlouvaRozsirena_element();
		new KoopAPI.NovaSmlouvaRozsirenaItem();
		new KoopAPI.NovaSmlouvaRozsirenaResponse_element();
		new KoopAPI.NovaSmlouvaVDP_element();
		new KoopAPI.NovaSmlouvaVDPItem();
		new KoopAPI.NovaSmlouvaVDPResponse_element();
		new KoopAPI.NovinkaItem();
		new KoopAPI.Novinky_element();
		new KoopAPI.NovinkyData();
		new KoopAPI.NovinkyResponse_element();
		new KoopAPI.OsobaItem();
		new KoopAPI.PNDCekarna_element();
		new KoopAPI.PNDCekarnaResponse_element();
		new KoopAPI.PNDNestalec_element();
		new KoopAPI.PNDNestalecData();
		new KoopAPI.PNDNestalecTable_element();
		new KoopAPI.PNDNestalecItem();
		new KoopAPI.PNDNestalecResponse_element();
		new KoopAPI.Pojistneudalosti_element();
		new KoopAPI.PojistneUdalostiData();
		new KoopAPI.PojistneUdalostiTable_element();
		new KoopAPI.PojistneUdalostiItem();
		new KoopAPI.PojistneudalostiResponse_element();
		new KoopAPI.Provize_element();
		new KoopAPI.ProvizeData();
		new KoopAPI.ProvizeTable_element();
		new KoopAPI.ProvizeItem();
		new KoopAPI.ProvizeResponse_element();
		new KoopAPI.RizikoItem();
		new KoopAPI.RoleOsobaItem();
		new KoopAPI.SmlouvaPNDAkceptace_element();
		new KoopAPI.SmlouvaPNDAkceptaceItem();
		new KoopAPI.SmlouvaPNDAkceptaceResponse_element();
		new KoopAPI.SmlouvaPNDCekarnaData();
		new KoopAPI.PNDCekarnaTable_element();
		new KoopAPI.SmlouvaPNDCekarnaItem();
		new KoopAPI.SmlouvaPNDDataAkceptace();
		new KoopAPI.PNDSmlouvaTable_element();
		new KoopAPI.SmlouvyZaObdobi_element();
		new KoopAPI.SmlouvyZaObdobiData();
		new KoopAPI.SmlouvyZaObdobiResponse_element();
		new KoopAPI.SouborItem();
		new KoopAPI.StatusDetail();
		new KoopAPI.StavSmlouvy_element();
		new KoopAPI.StavSmlouvyData();
		new KoopAPI.StavSmlouvyTable_element();
		new KoopAPI.StavSmlouvyItem();
		new KoopAPI.StavSmlouvyResponse_element();
		new KoopAPI.Ukoncene_element();
		new KoopAPI.UkonceneResponse_element();
		new KoopAPI.UkonceneSmlouvyData();
		new KoopAPI.UkonceneSmlouvyTable_element();
		new KoopAPI.UkonceneSmlouvyItem();
		new KoopAPI.UzivatelKnz_element();
		new KoopAPI.UzivatelKnzData();
		new KoopAPI.UzivatelKnzTable_element();
		new KoopAPI.UzivatelKnzItem();
		new KoopAPI.UzivatelKnzResponse_element();
		new KoopAPI.VozidloItem();
		new KoopAPI.Ziskatel();
	}
	@isTest static void coverCodeForCekarnaStoren(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
        KoopAPI.CekarnaStorenData data = testObject.CekarnaStoren(null, null, null, null);
		System.assertEquals(2, data.CekarnaStorenList.CekarnaStorenItem.size(), 'Unexpected number of items.');
        System.assertEquals('Štramberk', data.CekarnaStorenList.CekarnaStorenItem[0].OBEC, 'Unexpected data.');
        System.assertEquals('Čestín', data.CekarnaStorenList.CekarnaStorenItem[1].OBEC, 'Unexpected data.');
        System.assertEquals(4, data.StatusList.StatusDetail.size(), 'Unexpected number of items.');
        System.assertEquals(2, data.DataInfo.PocetZaznamu, 'Unexpected number of items.');
	}
	@isTest static void coverCodeForCiselniky(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.Ciselniky(null));
	}
	@isTest static void coverCodeForDluznik(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.Dluznik(null, null, null, null, null, null));
	}
	@isTest static void coverCodeForDluznikFlotila(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.DluznikFlotila(null, null, null, null));
	}
	@isTest static void coverCodeForDluznikIndividualni(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
        KoopAPI.DluznikIndividualniData data = testObject.DluznikIndividualni(null, null, null, null);
		System.assertEquals(2, data.DluznikList.DluznikIndividualniItem.size(), '2 items should be returned.');
        System.assertEquals('User1', data.DluznikList.DluznikIndividualniItem[0].PRIJMENI, 'Data should be populated from Mock.');
        System.assertEquals('User2', data.DluznikList.DluznikIndividualniItem[1].PRIJMENI, 'Data should be populated from Mock.');
        System.assertEquals(4, data.StatusList.StatusDetail.size(), '4 items should be returned.');
        System.assertEquals(2, data.DataInfo.PocetZaznamu, 'Data should be populated from Mock.');
	}
	@isTest static void coverCodeForDokumentySmlouvy(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.DokumentySmlouvy(null, null, null));
	}
	@isTest static void coverCodeForInvesticeTip(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.InvesticeTip(null, null, null, null));
	}
	@isTest static void coverCodeForKmen(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.Kmen(null, null, null, null));
	}
	@isTest static void coverCodeForKmenDetail(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
        KoopAPI.KmenDetailData data = testObject.KmenDetail(null, null, null);
		System.assertEquals(1, data.KmenDetailList.KmenDetailItem.size(), 'There should be 1 item from GoodMock.');
        System.assertEquals('6009018452', data.KmenDetailList.KmenDetailItem[0].CISLO_NAVRHU, 'Unexpected value.');
        System.assertEquals(4, data.StatusList.StatusDetail.size(), '4 items should be returned.');
        System.assertEquals(2, data.DataInfo.PocetZaznamu, 'Data should be populated from Mock.');
	}
	@isTest static void coverCodeForNeinkasniIntervence(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.NeinkasniIntervence(null, null));
	}
	@isTest static void coverCodeForNovaSmlouvaRozsirena(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.NovaSmlouvaRozsirena(null, null, null, null, null));
	}
	@isTest static void coverCodeForNovaSmlouvaVDP(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.NovaSmlouvaVDP(null, null, null, null, null));
	}
	@isTest static void coverCodeForNovinky(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.Novinky(null));
	}
	@isTest static void coverCodeForPNDCekarna(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.PNDCekarna(null, null, null, null, null));
	}
	@isTest static void coverCodeForPNDNestalec(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.PNDNestalec(null, null));
	}
	@isTest static void coverCodeForPojistneudalosti(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.Pojistneudalosti(null, null, null, null, null, null, null, null));
	}
	@isTest static void coverCodeForProvize(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.Provize(null, null, null, null, null, null, null));
	}
	@isTest static void coverCodeForSmlouvaPNDAkceptace(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.SmlouvaPNDAkceptace(null, null, null, null, null));
	}
	@isTest static void coverCodeForSmlouvyZaObdobi(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.SmlouvyZaObdobi(null, null, null, null, null));
	}
	@isTest static void coverCodeForStavSmlouvy(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.StavSmlouvy(null, null, null, null));
	}
	@isTest static void coverCodeForUkoncene(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.Ukoncene(null, null, null, null, null, null));
	}
	@isTest static void coverCodeForUzivatelKnz(){
		Test.setMock(WebServiceMock.class, new GoodMock());
		KoopAPI.WSDataExtranetSoap testObject = new KoopAPI.WSDataExtranetSoap();
		System.assertEquals(null, testObject.UzivatelKnz(null, null, null, null));
	}

    public class GoodMock implements WebServiceMock {
        public void doInvoke(
                Object stub,
                Object request,
                Map<String, Object> response,
                String endpoint,
                String soapAction,
                String requestName,
                String responseNS,
                String responseName,
                String responseType) {
        
            System.debug(LoggingLevel.INFO, 'GoodMock.doInvoke() - ' +
                '\n request: ' + request +
                '\n response: ' + response +
                '\n endpoint: ' + endpoint +
                '\n soapAction: ' + soapAction +
                '\n requestName: ' + requestName +
                '\n responseNS: ' + responseNS +
                '\n responseName: ' + responseName +
                '\n responseType: ' + responseType);

            if(request instanceOf KoopAPI.CekarnaStoren_element) {
				KoopAPI.CekarnaStorenResponse_element fakeResponse = new KoopAPI.CekarnaStorenResponse_element();
                KoopAPI.CekarnaStorenData data = new KoopAPI.CekarnaStorenData();
                data.CekarnaStorenList = createArrayOfCekarnaStorenItem();
                data.StatusList = createArrayOfStatusDetail();
                data.DataInfo = createExtraDataInfo();
                fakeResponse.CekarnaStorenResult = data;
                response.put( 'response_x', fakeResponse);
            }
            else if(request instanceOf KoopAPI.Ciselniky_element) {
                response.put( 'response_x', new KoopAPI.CiselnikyResponse_element());
            }
            else if(request instanceOf KoopAPI.Dluznik_element) {
                response.put( 'response_x', new KoopAPI.DluznikResponse_element());
            }
            else if(request instanceOf KoopAPI.DluznikFlotila_element) {
                response.put( 'response_x', new KoopAPI.DluznikFlotilaResponse_element());
            }
            else if(request instanceOf KoopAPI.DluznikIndividualni_element) {
                KoopAPI.DluznikIndividualniResponse_element fakeResponse = new KoopAPI.DluznikIndividualniResponse_element();
                KoopAPI.DluznikIndividualniData data = new KoopAPI.DluznikIndividualniData();
                data.DluznikList = createArrayOfDluznik();
                data.StatusList = createArrayOfStatusDetail();
                data.DataInfo = createExtraDataInfo();
                fakeResponse.DluznikIndividualniResult = data;
                response.put( 'response_x', fakeResponse);
            }
            else if(request instanceOf KoopAPI.DokumentySmlouvy_element) {
                response.put( 'response_x', new KoopAPI.DokumentySmlouvyResponse_element());
            }
            else if(request instanceOf KoopAPI.InvesticeTip_element) {
                response.put( 'response_x', new KoopAPI.InvesticeTipResponse_element());
            }
            else if(request instanceOf KoopAPI.Kmen_element) {
                response.put( 'response_x', new KoopAPI.KmenResponse_element());
            }
            else if(request instanceOf KoopAPI.KmenDetail_element) {
				KoopAPI.KmenDetailResponse_element fakeResponse = new KoopAPI.KmenDetailResponse_element();
                KoopAPI.KmenDetailData data = new KoopAPI.KmenDetailData();
                data.KmenDetailList = createArrayOfKmenDetail();
                data.RoleOsobaList = createArrayOfRoleOsobaItem();
                data.OsobaList = createArrayOfOsobaItem();
                data.StatusList = createArrayOfStatusDetail();
                data.DataInfo = createExtraDataInfo();
                fakeResponse.KmenDetailResult = data;
                response.put( 'response_x', fakeResponse);
            }
            else if(request instanceOf KoopAPI.NeinkasniIntervence_element) {
                response.put( 'response_x', new KoopAPI.NeinkasniIntervenceResponse_element());
            }
            else if(request instanceOf KoopAPI.NovaSmlouvaRozsirena_element) {
                response.put( 'response_x', new KoopAPI.NovaSmlouvaRozsirenaResponse_element());
            }
            else if(request instanceOf KoopAPI.NovaSmlouvaVDP_element) {
                response.put( 'response_x', new KoopAPI.NovaSmlouvaVDPResponse_element());
            }
            else if(request instanceOf KoopAPI.Novinky_element) {
                response.put( 'response_x', new KoopAPI.NovinkyResponse_element());
            }
            else if(request instanceOf KoopAPI.PNDCekarna_element) {
                response.put( 'response_x', new KoopAPI.PNDCekarnaResponse_element());
            }
            else if(request instanceOf KoopAPI.PNDNestalec_element) {
                response.put( 'response_x', new KoopAPI.PNDNestalecResponse_element());
            }
            else if(request instanceOf KoopAPI.Pojistneudalosti_element) {
                response.put( 'response_x', new KoopAPI.PojistneudalostiResponse_element());
            }
            else if(request instanceOf KoopAPI.Provize_element) {
                response.put( 'response_x', new KoopAPI.ProvizeResponse_element());
            }
            else if(request instanceOf KoopAPI.SmlouvaPNDAkceptace_element) {
                response.put( 'response_x', new KoopAPI.SmlouvaPNDAkceptaceResponse_element());
            }
            else if(request instanceOf KoopAPI.SmlouvyZaObdobi_element) {
                response.put( 'response_x', new KoopAPI.SmlouvyZaObdobiResponse_element());
            }
            else if(request instanceOf KoopAPI.StavSmlouvy_element) {
                response.put( 'response_x', new KoopAPI.StavSmlouvyResponse_element());
            }
            else if(request instanceOf KoopAPI.Ukoncene_element) {
                response.put( 'response_x', new KoopAPI.UkonceneResponse_element());
            }
            else if(request instanceOf KoopAPI.UzivatelKnz_element) {
                response.put( 'response_x', new KoopAPI.UzivatelKnzResponse_element());
            }
        }
    }

	private static KoopAPI.ArrayOfCekarnaStorenItem createArrayOfCekarnaStorenItem() {
        KoopAPI.ArrayOfCekarnaStorenItem arrayOfCekarnaStorenItem = new KoopAPI.ArrayOfCekarnaStorenItem();
        List<KoopAPI.CekarnaStorenItem> itemList = new List<KoopAPI.CekarnaStorenItem>();
        KoopAPI.CekarnaStorenItem item = new KoopAPI.CekarnaStorenItem();
        item.CISLO_SMLOUVY = '2950292628';
        item.KOD_PRODUKTU = 'SCS';
        item.RC_ICO = '380130408';
        item.PRIJMENI = 'User1';
        item.JMENO = 'Test';
        item.ULICE = 'Horní Bašta';
        item.CISLO_DOMOVNI = '308';
        item.PSC = '74266';
        item.OBEC = 'Štramberk';
        item.DATUM_REGISTRACE = '17.06.2022';
        item.DATUM_UCINNOSTI = '01.01.2023';
        item.KOD_STORNO = 'STR201';
        item.POPIS_STORNO = 'Zánik ke konci pojistného obdobi - (KLI)';
        item.STAV_SMLOUVY = 'Z';
        item.DLUH = 0;
        itemList.add(item);
        KoopAPI.CekarnaStorenItem item2 = new KoopAPI.CekarnaStorenItem();
        item2.CISLO_SMLOUVY = '2952053521';
        item2.KOD_PRODUKTU = '1IO';
        item2.RC_ICO = '7353100491';
        item2.PRIJMENI = 'User2';
        item2.JMENO = 'Test';
        item2.CISLO_DOMOVNI = '40';
        item2.PSC = '28522';
        item2.OBEC = 'Čestín';
        item2.DATUM_REGISTRACE = '03.10.2022';
        item2.DATUM_UCINNOSTI = '25.11.2022';
        item2.KOD_STORNO = 'STORNO';
        item2.POPIS_STORNO = 'Pro neplacení';
        item2.STAV_SMLOUVY = 'Z';
        item2.DLUH = 1290.00;
        itemList.add(item2);
        arrayOfCekarnaStorenItem.CekarnaStorenItem = itemList;
        return arrayOfCekarnaStorenItem;
    }

    private static KoopAPI.ArrayOfDluznikIndividualniItem createArrayOfDluznik() {
        KoopAPI.ArrayOfDluznikIndividualniItem arrayOfDluznik = new KoopAPI.ArrayOfDluznikIndividualniItem();
        List<KoopAPI.DluznikIndividualniItem> itemList = new List<KoopAPI.DluznikIndividualniItem>();
        KoopAPI.DluznikIndividualniItem item = new KoopAPI.DluznikIndividualniItem();
        item.CISLO_SMLOUVY = '3952053522';
        item.CISLO_NAVRHU = null;
        item.KOD_PRODUKTU = '1IO';
        item.VERZE_PRODUKTU = '0';
        item.STAV_SMLOUVY = 'Z';
        item.ZPUSOB_PLATBY = 'Bankou bez příkazu';
        item.MESICU_DLUH = '3';
        item.SPLATKA = 990.0;
        item.CASTECNA_UHRADA = 0.00;
        item.DLUH = 1290.00;
        item.RC_ICO = '1234567891';
        item.PRIJMENI = 'User1';
        item.JMENO = 'Test';
        item.TITUL = null;
        item.ULICE = null;
        item.CISLO_DOMOVNI = '40';
        item.PSC = '28522';
        item.OBEC = 'Čestín';
        item.TELEFON = null;
        item.UPOMINKA_DATUM = '03.10.2022';
        item.UPOMINKA_INFO = 'Upomínka s dodejkou - pojistník';
        item.UPOMINKA_CASTKA = 1290.00;
        item.VYMAHANI_INFO = null;
        item.UPOMINACI_POPLATEK = 300.00;
        item.PREPLATEK = 0;
        item.MAX_DATUM_SPLATNOSTI = '19.08.2022';
        item.PROVIZE = 0.00;
        itemList.add(item);
        KoopAPI.DluznikIndividualniItem item2 = new KoopAPI.DluznikIndividualniItem();
        item2.CISLO_SMLOUVY = '3950304738';
        item2.CISLO_NAVRHU = null;
        item2.KOD_PRODUKTU = 'OVP';
        item2.VERZE_PRODUKTU = '0';
        item2.STAV_SMLOUVY = 'S';
        item2.ZPUSOB_PLATBY = 'Složenkou';
        item2.MESICU_DLUH = '11';
        item2.SPLATKA = 90.00;
        item2.CASTECNA_UHRADA = 0.00;
        item2.DLUH = 90.00;
        item2.RC_ICO = '9876543219';
        item2.PRIJMENI = 'User2';
        item2.JMENO = 'Test';
        item2.TITUL = null;
        item2.ULICE = 'Generála Svobody';
        item2.CISLO_DOMOVNI = '258/1';
        item2.PSC = '73601';
        item2.OBEC = 'Havířov';
        item2.TELEFON = null;
        item2.UPOMINKA_INFO = null;
        item2.UPOMINKA_CASTKA = 0;
        item2.VYMAHANI_INFO = null;
        item2.UPOMINACI_POPLATEK = 0.00;
        item2.PREPLATEK = 0;
        item2.MAX_DATUM_SPLATNOSTI = '27.12.2021';
        item2.PROVIZE = 0.00;
        itemList.add(item2);
        arrayOfDluznik.DluznikIndividualniItem = itemList;
        return arrayOfDluznik;
    }

	private static KoopAPI.ArrayOfKmenDetailItem createArrayOfKmenDetail() {
		KoopAPI.ArrayOfKmenDetailItem arrayOfKmenDetail = new KoopAPI.ArrayOfKmenDetailItem();
        List<KoopAPI.KmenDetailItem> itemList = new List<KoopAPI.KmenDetailItem>();
        KoopAPI.KmenDetailItem item = new KoopAPI.KmenDetailItem();
        item.CISLO_SMLOUVY = '6009018452';
        item.CISLO_NAVRHU = '6009018452';
        item.DATUM_SJEDNANI = '07.10.2022';
        item.DATUM_POCATKU = '01.12.2022';
        item.DATUM_KONCE = '30.11.2040';
        item.DATUM_AKCEPTACE = '02.11.2022';
        item.KOD_PRODUKTU = 'IFLEX';
        item.VERZE_PRODUKTU = '15';
        item.STAV_SMLOUVY = 'P';
        item.ZPUSOB_PLATBY = '2';
        item.SJEDNATEL = '307538';
        item.DATUM_ZAPLACENO_DO = '31.12.2022';
        item.FREKVENCE_PLACENI = 12;
        item.KMENOVE_POJISTNE = 14004.00;
        item.LHUTNI_POJISTNE = 1167.00;
        item.SLEVA_PRI_PROC = 0.00;
        item.SLEVA_PRI_KC = 0;
        item.DNY_DLUHU = 0;
        item.DLUH = 0.00;
		itemList.add(item);
		arrayOfKmenDetail.KmenDetailItem = itemList;
        return arrayOfKmenDetail;
	}

	private static KoopAPI.ArrayOfRoleOsobaItem createArrayOfRoleOsobaItem() {
		KoopAPI.ArrayOfRoleOsobaItem arrayOfRoleOsobaItem = new KoopAPI.ArrayOfRoleOsobaItem();
        List<KoopAPI.RoleOsobaItem> itemList = new List<KoopAPI.RoleOsobaItem>();
        KoopAPI.RoleOsobaItem item = new KoopAPI.RoleOsobaItem();
        item.CISLO_SMLOUVY = '6009018452';
        item.ID_OSOBA = '0010317786';
        item.ROLE_KOD = '1';
        item.ROLE_POPIS = 'Pojistník';
		itemList.add(item);
		KoopAPI.RoleOsobaItem item2 = new KoopAPI.RoleOsobaItem();
        item2.CISLO_SMLOUVY = '6009018452';
        item2.ID_OSOBA = '0010317786';
        item2.ROLE_KOD = '2';
        item2.ROLE_POPIS = 'Pojištěný';
		itemList.add(item2);
		arrayOfRoleOsobaItem.RoleOsobaItem = itemList;
        return arrayOfRoleOsobaItem;
	}

	private static KoopAPI.ArrayOfOsobaItem createArrayOfOsobaItem() {
		KoopAPI.ArrayOfOsobaItem arrayOfOsobaItem = new KoopAPI.ArrayOfOsobaItem();
        List<KoopAPI.OsobaItem> itemList = new List<KoopAPI.OsobaItem>();
        KoopAPI.OsobaItem item = new KoopAPI.OsobaItem();
        item.ID_OSOBA = '6009018452';
        item.PRIJMENI = 'User1';
        item.JMENO = 'Test';
        item.TELEFON = '+420233363009';
        item.EMAIL = 'test@centrum.cz';
        item.RC_ICO = '5551150143';
        item.ULICE = 'U letenského sadu';
        item.CISLO_DOMOVNI = '1304/17';
        item.PSC = '17000';
        item.OBEC = 'Praha';
		itemList.add(item);
		arrayOfOsobaItem.OsobaItem = itemList;
        return arrayOfOsobaItem;
	}

    private static KoopAPI.ArrayOfStatusDetail createArrayOfStatusDetail() {
        KoopAPI.ArrayOfStatusDetail arrayOfStatusDetail = new KoopAPI.ArrayOfStatusDetail();
        List<KoopAPI.StatusDetail> statusDetailList = new List<KoopAPI.StatusDetail>();
        KoopAPI.StatusDetail statusDetail = new KoopAPI.StatusDetail();
        statusDetail.Popis = 'Partner nalezen.';
        statusDetail.PrubehOK = true;
        statusDetailList.add(statusDetail);
        statusDetail.Popis = 'Získatelé ověřeni.';
        statusDetail.PrubehOK = true;
        statusDetailList.add(statusDetail);
        statusDetail.Popis = 'Možno spustit dotaz.';
        statusDetail.PrubehOK = true;
        statusDetailList.add(statusDetail);
        statusDetail.Popis = 'Data v pořádku';
        statusDetail.PrubehOK = true;
        statusDetailList.add(statusDetail);
        arrayOfStatusDetail.StatusDetail = statusDetailList;
        return arrayOfStatusDetail;
    }

    private static KoopAPI.ExtraDataInfo createExtraDataInfo() {
        KoopAPI.ExtraDataInfo dataInfo = new KoopAPI.ExtraDataInfo();
        dataInfo.AktualizaceDat = '25.11.2022 5:01:29';
        dataInfo.PocetZaznamu = 2;
        return dataInfo;
    }
}
